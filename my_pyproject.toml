[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "llmfoundry" # <----- Ensure it matches the name of your baseline directory containing all the source code
version = "0.4.0"
description="LLM Foundry"
license = "Apache-2.0 license"
authors = ["MosaicML <team@mosaicml.com>, Lorenzo Sani <ls985@cam.ac.uk>"]
readme = "README.md"
# homepage = ""
repository = "https://github.com/relogu/llm-foundry"
# documentation = ""
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]


[tool.poetry.dependencies]
python = ">=3.8.0, <3.11.0"  # don't change this
hydra-core = "1.3.2" # don't change this
types-protobuf = "^4.24.0.1"
types-pyyaml = "^6.0.12.12"
types-decorator = "^5.1.8.4"
types-setuptools = "^68.2.0.0"
wandb = "^0.15.12"
pyarrow = "^13.0.0"
multiprocess = "^0.70.15"
nvsmi = "^0.4.2"
transformers = ">=4.34.1, <4.35"
cloudpickle = "^2.2.1"
tqdm = "^4.66.1"
psutil = "^5.9.5"
pandas = "^2.1.1"
scipy = ">=1.10.0,<=1.11.0"
librosa = "^0.10.1"
flwr = {extras = ["simulation"], version = "^1.5.0"}
nvidia-ml-py = "11.495.46"
sentencepiece = "0.1.97"
ipykernel = "^6.25.2"
matplotlib = "^3.8.0"
seaborn = "^0.13.0"
jupyter-server = "^2.7.3"
ipywidgets = "^8.1.1"
ipython = "^8.17.2"
torch = {url = "https://download.pytorch.org/whl/cu121_pypi_cudnn/torch-2.1.0%2Bcu121.with.pypi.cudnn-cp310-cp310-linux_x86_64.whl"}
torchaudio = {url = "https://download.pytorch.org/whl/cu121/torchaudio-2.1.0%2Bcu121-cp310-cp310-linux_x86_64.whl"}
torchvision = {url = "https://download.pytorch.org/whl/cu121/torchvision-0.16.0%2Bcu121-cp310-cp310-linux_x86_64.whl"}
gdown = "^4.7.1"
mosaicml = {extras = ["gcs", "libcloud", "mlflow", "oci", "wandb"], version = ">=0.17, <0.18"}
accelerate = ">=0.20, <0.21"
mosaicml-streaming = ">=0.7.1, <0.8"
datasets = ">=2.14.5, <2.15"
fsspec = "2023.6.0"
einops = "0.5.0"
omegaconf = ">=2.2.3, <3"
slack-sdk = "<4"
mosaicml-cli = ">=0.3,<1"
onnx = "1.14.0"
onnxruntime = "1.15.1"
cmake = ">=3.25.0,<=3.26.3"  # required for triton-pre-mlir below
# PyPI does not support direct dependencies, so we remove this line before uploading from PyPI
triton-pre-mlir = { git = "https://github.com/vchiley/triton.git", branch = "triton_pre_mlir_sm90", subdirectory = "python" }
boto3 = ">=1.21.45,<2"
huggingface-hub = ">=0.17.0,<1.0"
beautifulsoup4 = ">=4.12.2,<5"  # required for model download utils
tenacity = ">=8.2.3,<9"
# mosaicml-turbo = "0.0.4"
# flash-attn = "1.0.9"
# flash-attn = "2.3.2"
# PyPI does not support direct dependencies, so we remove this line before uploading from PyPI
# xentropy-cuda-lib = { git = "https://github.com/HazyResearch/flash-attention.git", branch = "v1.0.9", subdirectory = "csrc/xentropy" }
# xentropy-cuda-lib = { git = "https://github.com/HazyResearch/flash-attention.git", branch = "v2.3.2", subdirectory = "csrc/xentropy" }
mosaicml-turbo = "^0.0.5"
loralib = "0.1.1"
bitsandbytes = "0.39.1"
peft = "0.4.0"

[tool.poetry.dev-dependencies]
isort = "5.11.5"
black = { version = "23.1.0", extras = ["jupyter"] }
docformatter = "1.5.1"
mypy = "0.981"
pylint = "2.8.2"
flake8 = "3.9.2"
pytest-watch = "4.2.0"
ruff = "0.0.272"
types-requests = "2.27.7"
yamlfix = "^1.14.0"
pre-commit = ">=2.18.1, <3"
pytest = ">=7.2.1, <8"
pytest_codeblocks = ">=0.16.1, <0.17"
pytest-cov = ">=4,<5"
pyright = "1.1.256"
toml = ">=0.10.2, <0.11"
packaging = ">=21, <24"
hf_transfer = "0.1.3"

[tool.isort]
line_length = 88
indent = "    "
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]

[tool.pytest.ini_options]
minversion = "6.2"
addopts = "-qq"
testpaths = [
    "flwr_baselines",
]

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
strict = false
plugins = "numpy.typing.mypy_plugin"

[tool.pylint."MESSAGES CONTROL"]
disable = "bad-continuation,duplicate-code,too-few-public-methods,useless-import-alias,import-error,no-member,no-name-in-module"
good-names = "f,i,j,k,_,x,y,X,Y"
signature-mutators="hydra.main.main"

[[tool.mypy.overrides]]
module = [
    "importlib.metadata.*",
    "importlib_metadata.*",
]
follow_imports = "skip"
follow_imports_for_stubs = true
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = "torch.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[[tool.mypy.overrides]]
module = "ray.*"
follow_imports = "skip"
follow_imports_for_stubs = true

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.yamlfix]
allow_duplicate_keys = false
line_length = 88
none_representation = "null"
whitelines = 1
section_whitelines = 1
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff]
target-version = "py38"
line-length = 88
select = ["D", "E", "F", "W", "B", "ISC", "C4"]
fixable = ["D", "E", "F", "W", "B", "ISC", "C4"]
ignore = ["B024", "B027"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "proto",
]

[tool.ruff.pydocstyle]
convention = "numpy"
